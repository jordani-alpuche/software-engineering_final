generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model blacklist_visitors {
  id                                          Int       @id(map: "banned_visitors_pkey") @default(autoincrement())
  reason                                      String
  status                                      String    @default("banned") @db.VarChar(20)
  created_at                                  DateTime? @default(now()) @db.Timestamp(6)
  updated_at                                  DateTime? @default(now()) @db.Timestamp(6)
  last_name                                   String    @db.VarChar(255)
  first_name                                  String    @db.VarChar(255)
  resident_id                                 Int?
  security_id                                 Int?
  users_blacklist_visitors_resident_idTousers users?    @relation("blacklist_visitors_resident_idTousers", fields: [resident_id], references: [id], onDelete: NoAction, map: "blacklist_resident_id")
  users_blacklist_visitors_security_idTousers users?    @relation("blacklist_visitors_security_idTousers", fields: [security_id], references: [id], onDelete: NoAction, map: "blacklist_security_id")

  @@index([id], map: "id_1741109275836_index")
  @@index([resident_id], map: "security_id_1741109281378_index")
}

model entry_log {
  id                                 Int       @id(map: "resident_entry_log_pkey") @default(autoincrement())
  scanned_in_at                      DateTime  @default(now()) @db.Timestamp(6)
  scanned_out_at                     DateTime? @db.Timestamp(6)
  resident_id                        Int?
  security_id                        Int?
  users_entry_log_resident_idTousers users?    @relation("entry_log_resident_idTousers", fields: [resident_id], references: [id], onDelete: NoAction, map: "entry_resident_id")
  users_entry_log_security_idTousers users?    @relation("entry_log_security_idTousers", fields: [security_id], references: [id], onDelete: NoAction, map: "entry_security_id")

  @@index([id], map: "id_1741109306799_index")
}

model login_log {
  id          Int       @id @default(autoincrement())
  user_id     Int
  ip_address  String?   @db.VarChar(255)
  login_time  DateTime  @default(now()) @db.Timestamp(6)
  logout_time DateTime? @db.Timestamp(6)
  status      String    @default("success") @db.VarChar(20)
  users       users     @relation(fields: [user_id], references: [id], onDelete: NoAction, map: "loginlog_userid")

  @@index([id], map: "id_1741109327221_index")
  @@index([user_id], map: "idx_login_log_user_id")
}

model notifications {
  id         Int       @id @default(autoincrement())
  message    String
  type       String    @db.VarChar(20)
  status     String    @default("unread") @db.VarChar(20)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  user_id    Int?
  users      users?    @relation(fields: [user_id], references: [id], onDelete: NoAction, map: "notifications_userid")

  @@index([id], map: "id_1741109344869_index")
  @@index([user_id], map: "resident_id_1741109348633_index")
}

model resident_vehicle {
  id            Int     @id(map: "visitor_vehicle_pkey") @default(autoincrement())
  user_id       Int
  vehicle_make  String  @db.VarChar(50)
  vehicle_model String  @db.VarChar(50)
  vehicle_color String? @db.VarChar(20)
  license_plate String  @unique
  users         users   @relation(fields: [user_id], references: [id], onDelete: NoAction, map: "resident_vehicle")

  @@index([id], map: "id_1741109394620_index")
  @@index([user_id], map: "resident_id_1741109065767_index")
}

model users {
  id                                                       Int                  @id(map: "users_pkey1") @unique(map: "id_unqiue") @default(autoincrement())
  username                                                 String               @unique(map: "users_username_key1") @db.VarChar(255)
  password                                                 String
  role                                                     String               @db.VarChar(20)
  status                                                   String               @default("active") @db.VarChar(10)
  created_at                                               DateTime?            @default(now()) @db.Timestamp(6)
  updated_at                                               DateTime?            @default(now()) @db.Timestamp(6)
  first_name                                               String?              @db.VarChar(255)
  last_name                                                String?              @db.VarChar(255)
  email                                                    String?              @db.VarChar(100)
  address                                                  String?              @db.VarChar(255)
  house_number                                             String?              @db.VarChar(255)
  phone_number                                             String?              @db.VarChar(255)
  qrcode                                                   String?              @db.VarChar(1000)
  shift                                                    String?              @db.VarChar(50)
  accesspoints                                             String?              @db.VarChar(100)
  blacklist_visitors_blacklist_visitors_resident_idTousers blacklist_visitors[] @relation("blacklist_visitors_resident_idTousers")
  blacklist_visitors_blacklist_visitors_security_idTousers blacklist_visitors[] @relation("blacklist_visitors_security_idTousers")
  entry_log_entry_log_resident_idTousers                   entry_log[]          @relation("entry_log_resident_idTousers")
  entry_log_entry_log_security_idTousers                   entry_log[]          @relation("entry_log_security_idTousers")
  login_log                                                login_log[]
  notifications                                            notifications[]
  resident_vehicle                                         resident_vehicle[]
  visitor_entry_logs                                       visitor_entry_logs[]
  visitors_schedule                                        visitors_schedule[]

  @@index([id], map: "id_1741109104433_index")
}

model visitiors {
  id                  Int                  @id @default(autoincrement())
  visitor_first_name  String?              @db.VarChar(255)
  visitor_last_name   String?              @db.VarChar(255)
  visitor_id_type     String?              @db.VarChar(255)
  visitor_id_number   String?              @db.VarChar(255)
  created_date        String?              @default("CURRENT_TIMESTAMP") @db.VarChar(255)
  visitor_schedule_id Int?
  visitors_schedule   visitors_schedule?   @relation(fields: [visitor_schedule_id], references: [id], onDelete: NoAction, map: "vschedule_id")
  visitor_entry_logs  visitor_entry_logs[]
}

model visitor_entry_logs {
  id                  Int               @id(map: "entry_logs_pkey") @default(autoincrement())
  security_id         Int
  created_at          DateTime?         @default(now()) @db.Timestamp(6)
  updated_at          DateTime?         @default(now()) @db.Timestamp(6)
  visitor_schedule_id Int
  entry_type          String?           @db.VarChar(255)
  visitor_id          Int
  entry_time          DateTime?         @default(now()) @db.Timestamp(6)
  exit_time           DateTime?         @db.Timestamp(6)
  users               users             @relation(fields: [security_id], references: [id], onDelete: NoAction, map: "securityid")
  visitiors           visitiors         @relation(fields: [visitor_id], references: [id], onDelete: NoAction, map: "visitor_id")
  visitors_schedule   visitors_schedule @relation(fields: [visitor_schedule_id], references: [id], onDelete: NoAction, map: "visitorentrylog_vscheduleid")

  @@index([id], map: "id_1741109463966_index")
  @@index([visitor_schedule_id], map: "idx_entry_logs_visitor_id")
  @@index([security_id], map: "security_id_1741109482417_index")
}

model visitor_feedback {
  id                  Int               @id @default(autoincrement())
  rating              Int
  comments            String?
  created_at          DateTime?         @default(now()) @db.Timestamp(6)
  visitor_schedule_id Int
  visitors_schedule   visitors_schedule @relation(fields: [visitor_schedule_id], references: [id], onDelete: NoAction, map: "visitorfeedback_vscheduleid")

  @@index([id], map: "id_1741109448583_index")
  @@index([visitor_schedule_id], map: "visitor_schedule_id_1741109451844_index")
}

model visitors_schedule {
  id                  Int                  @id(map: "visitors_pkey") @default(autoincrement())
  resident_id         Int
  visitor_phone       String               @db.VarChar(20)
  visitor_email       String               @db.VarChar(100)
  status              String?              @default("pending") @db.VarChar(20)
  created_at          DateTime?            @default(now()) @db.Timestamp(6)
  visitor_type        String               @db.VarChar(100)
  license_plate       String               @db.VarChar(20)
  visitor_entry_date  DateTime             @db.Date
  visitor_exit_date   DateTime             @db.Date
  visitor_qrcode      String?
  visitor_qrcode_url  String?              @db.VarChar(255)
  visitor_qrcode_path String?              @db.VarChar(255)
  comments            String?              @db.VarChar(255)
  sg_type             Int
  visitiors           visitiors[]
  visitor_entry_logs  visitor_entry_logs[]
  visitor_feedback    visitor_feedback[]
  users               users                @relation(fields: [resident_id], references: [id], onDelete: NoAction, map: "vistorschedule_residentid")

  @@index([id], map: "id_1741109513648_index")
  @@index([resident_id], map: "resident_id_1741109518675_index")
}
