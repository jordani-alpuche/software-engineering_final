generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model banned_visitors {
  id         Int       @id @default(autoincrement())
  visitor_id Int?
  reason     String
  status     String?   @default("banned") @db.VarChar(20)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)

  @@index([visitor_id], map: "idx_banned_visitors_visitor_id")
}

model notifications {
  id         Int       @id @default(autoincrement())
  user_id    Int?
  message    String
  type       String    @db.VarChar(20)
  status     String?   @default("unread") @db.VarChar(20)
  created_at DateTime? @default(now()) @db.Timestamp(6)
  updated_at DateTime? @default(now()) @db.Timestamp(6)
  users      users?    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model qr_codes {
  id                 Int                  @id @default(autoincrement())
  user_id            Int?
  visitor_id         Int?
  code               String               @unique
  expires_at         DateTime             @db.Timestamp(6)
  status             String?              @default("pending") @db.VarChar(20)
  created_at         DateTime?            @default(now()) @db.Timestamp(6)
  updated_at         DateTime?            @default(now()) @db.Timestamp(6)
  users              users?               @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  visitor_entry_logs visitor_entry_logs[]

  @@index([visitor_id], map: "idx_qr_codes_visitor_id")
}

model users {
  id                 Int                  @id(map: "users_pkey1") @default(autoincrement())
  first_name         String               @db.VarChar(255)
  username           String               @unique(map: "users_username_key1") @db.VarChar(255)
  password           String
  phone              String               @db.VarChar(20)
  role               String               @db.VarChar(20)
  unit_number        String               @db.VarChar(20)
  status             String               @default("active") @db.VarChar(10)
  created_at         DateTime?            @default(now()) @db.Timestamp(6)
  updated_at         DateTime?            @default(now()) @db.Timestamp(6)
  last_name          String?              @db.VarChar(255)
  notifications      notifications[]
  qr_codes           qr_codes[]
  visitor_entry_logs visitor_entry_logs[]
  visitors           visitors[]
}

model users_old {
  id       Int     @id(map: "users_pkey") @default(autoincrement())
  name     String
  username String  @unique(map: "users_username_key")
  password String
  role     String?
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model visitors {
  id                 Int                  @id @default(autoincrement())
  resident_id        Int
  visitor_name       String               @db.VarChar(255)
  visitor_phone      String               @db.VarChar(20)
  visitor_id_type    String               @db.VarChar(50)
  visitor_id_number  String               @unique @db.VarChar(50)
  visitor_email      String               @db.VarChar(100)
  visit_date_start   DateTime             @db.Date
  visit_date_end     DateTime             @db.Date
  qr_code            String               @unique
  status             String               @default("pending") @db.VarChar(20)
  created_at         DateTime?            @default(now()) @db.Timestamp(6)
  type               String?              @db.VarChar(100)
  visit_start_time   String?              @db.VarChar(255)
  visit_end_time     String?              @db.VarChar(255)
  visitor_entry_logs visitor_entry_logs[]
  users              users                @relation(fields: [resident_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model visitor_entry_logs {
  id              Int       @id(map: "entry_logs_pkey") @default(autoincrement())
  visitor_id      Int
  qr_code_id      Int?
  security_id     Int?
  entry_time      DateTime? @default(now()) @db.Timestamp(6)
  exit_time       DateTime? @db.Timestamp(6)
  status          String?   @default("pending") @db.VarChar(20)
  created_at      DateTime? @default(now()) @db.Timestamp(6)
  updated_at      DateTime? @default(now()) @db.Timestamp(6)
  entry_from_date String?   @db.VarChar(255)
  entry_to_date   String?   @db.VarChar(255)
  qr_codes        qr_codes? @relation(fields: [qr_code_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "entry_logs_qr_code_id_fkey")
  users           users?    @relation(fields: [security_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "entry_logs_security_id_fkey")
  visitors        visitors  @relation(fields: [visitor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "entry_logs_visitor_id_fkey")

  @@index([visitor_id], map: "idx_entry_logs_visitor_id")
}
