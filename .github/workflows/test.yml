name: Run Tests

on:
  push:
    branches: [main, se_presentation]
  pull_request:
    branches: [main, se_presentation]

env:
  DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/testdb?schema=public"
  CI: true

permissions:
  checks: write
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      # Checkout the code from the repository
      - uses: actions/checkout@v3

      # Set up Node.js with a specific version
      - uses: actions/setup-node@v3
        with:
          node-version: "18"

      # Install dependencies using npm ci with --legacy-peer-deps to resolve dependency conflicts
      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      # Generate the Prisma client
      - name: Generate Prisma client
        run: npx prisma generate

      # Run Prisma migrations
      - name: Run Prisma migrations
        run: npx prisma migrate deploy

      # Run tests using npm test
      - name: Run tests
        run: npm test

      # # Debug step: List directory contents
      # - name: Debug - List Files
      #   run: ls -R

      # Publish test results
      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        with:
          name: Jest Tests
          path: ./reports/junit.xml
          reporter: java-junit
